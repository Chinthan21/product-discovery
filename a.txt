<img src={product.image} alt={product.title} style={{ width: '100%' }} />
              <h3>{product.title}</h3>
              <p>{product.description}</p>
              <p>Price: ${product.price}</p>
              <p>Rating: {product.rating.rate} ({product.rating.count} reviews)</p>





              import React, { useEffect } from "react";
import { connect } from 'react-redux';
import { fetchProducts } from "../redux/actions/ProductActions.js";
import { Container, Row, Col } from "react-bootstrap";
import Card from "react-bootstrap/Card";
import Button from "react-bootstrap/Button";
import styles from "./ProductList.module.css";

const ProductList = ({ products, loading, error, fetchProducts }) => {
  useEffect(() => {
    fetchProducts();
  }, []); // Dispatch fetchProducts only once when the component mounts
  console.log(products);
  console.log(fetchProducts);
  if (loading) {
    return <div>Loading...</div>;
  }

  if (error) {
    return <div>Error: {error}</div>;
  }

  return (
    <Container>
      <h1>Product List</h1>
      <Row xs={1} md={2} lg={4}>
        {products.map((product) => (
          <Col key={product.id} className={styles.product}>
            <Card className={styles.card}>
              <Card.Img
                variant="top"
                src={product.image}
                alt={product.title}
                style={{ width: "50%", height: "50%" }}
              />
              <Card.Body className={styles.cardBody}>
                <Card.Title>{product.title}</Card.Title>
                <Card.Text>
                  Price: ${product.price}
                </Card.Text>
                <Card.Text>
                  Rating: {product.rating.rate} ({product.rating.count}{" "}
                  reviews)
                </Card.Text>
                <Button variant="primary">View</Button>
              </Card.Body>
            </Card>
          </Col>
        ))}
      </Row>
    </Container>
  );
};

const mapStateToProps = (state) => ({
  products: state.product.products,
  loading: state.product.loading,
  error: state.product.error
});

const mapDispatchToProps = {
  fetchProducts
};

export default connect(mapStateToProps, mapDispatchToProps)(ProductList);




888888888888888888888888888888888888888888888

// src/redux/actions/productActions.js
import { FETCH_PRODUCTS_REQUEST, FETCH_PRODUCTS_SUCCESS, FETCH_PRODUCTS_FAILURE } from './ActionTypes';

const fetchProductsRequest = () => ({
  type: FETCH_PRODUCTS_REQUEST
});

const fetchProductsSuccess = (products) => ({
  type: FETCH_PRODUCTS_SUCCESS,
  payload: products
});

const fetchProductsFailure = (error) => ({
  type: FETCH_PRODUCTS_FAILURE,
  payload: error
});

export const fetchProducts = () => {
  return async (dispatch) => {
    dispatch(fetchProductsRequest());

    try {
      const response = await fetch('https://fakestoreapi.com/products');
      if (!response.ok) {
        throw new Error('Failed to fetch products');
      }
      const products = await response.json();

      dispatch(fetchProductsSuccess(products));
    } catch (error) {
      dispatch(fetchProductsFailure(error.message));
    }
  };
};


***************************************
// src/index.js
import React from 'react';
import ReactDOM from 'react-dom';
import { Provider } from 'react-redux'; // Import Provider from react-redux
import store from './redux/store.js'; // Import your Redux store
import App from './App';

ReactDOM.render(
  <Provider store={store}>
    <App />
  </Provider>,
  document.getElementById('root')
);




  